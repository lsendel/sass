# Production Nginx Configuration for Payment Platform
user nginx;
worker_processes auto;
error_log /var/log/nginx/error.log warn;
pid /var/run/nginx.pid;

# Load dynamic modules
include /usr/share/nginx/modules/*.conf;

events {
    worker_connections 1024;
    use epoll;
    multi_accept on;
}

http {
    # Basic Settings
    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    # Logging Configuration
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for" '
                    'rt=$request_time uct="$upstream_connect_time" '
                    'uht="$upstream_header_time" urt="$upstream_response_time"';

    access_log /var/log/nginx/access.log main;

    # Performance Settings
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;
    client_max_body_size 20M;

    # Gzip Settings
    gzip on;
    gzip_vary on;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_types
        text/plain
        text/css
        text/xml
        text/javascript
        application/json
        application/javascript
        application/xml+rss
        application/atom+xml
        image/svg+xml;

    # Rate Limiting
    limit_req_zone $binary_remote_addr zone=api:10m rate=10r/s;
    limit_req_zone $binary_remote_addr zone=login:10m rate=5r/m;
    limit_req_zone $binary_remote_addr zone=payment:10m rate=1r/s;

    # Security Headers
    add_header X-Frame-Options DENY always;
    add_header X-Content-Type-Options nosniff always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;
    add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline' https://js.stripe.com https://maps.googleapis.com; style-src 'self' 'unsafe-inline' https://fonts.googleapis.com; font-src 'self' https://fonts.gstatic.com; img-src 'self' data: https:; connect-src 'self' https://api.stripe.com; frame-src https://js.stripe.com; object-src 'none'; base-uri 'self';" always;
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;

    # Hide Nginx version
    server_tokens off;

    # Upstream Backend Servers
    upstream backend {
        least_conn;
        server payment-platform-backend:8080 max_fails=3 fail_timeout=30s;
        keepalive 32;
    }

    # Upstream Frontend Servers
    upstream frontend {
        least_conn;
        server payment-platform-frontend:80 max_fails=3 fail_timeout=30s;
        keepalive 32;
    }

    # SSL Configuration
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES128-SHA256:ECDHE-RSA-AES256-SHA384:ECDHE-RSA-AES128-SHA:ECDHE-RSA-AES256-SHA;
    ssl_prefer_server_ciphers off;
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 10m;

    # HTTPS Server (Production)
    server {
        listen 443 ssl http2;
        server_name payment-platform.com www.payment-platform.com;

        # SSL Certificate
        ssl_certificate /etc/nginx/ssl/payment-platform.com.crt;
        ssl_certificate_key /etc/nginx/ssl/payment-platform.com.key;

        # SSL Security
        ssl_stapling on;
        ssl_stapling_verify on;
        ssl_trusted_certificate /etc/nginx/ssl/payment-platform.com.chain.crt;

        # Root and Index
        root /usr/share/nginx/html;
        index index.html index.htm;

        # Security
        location = /robots.txt {
            allow all;
            log_not_found off;
            access_log off;
        }

        # Frontend Static Files
        location / {
            try_files $uri $uri/ @frontend;
            expires 1y;
            add_header Cache-Control "public, immutable";

            # Security headers for static files
            add_header X-Frame-Options DENY always;
            add_header X-Content-Type-Options nosniff always;
        }

        # Frontend Fallback (SPA routing)
        location @frontend {
            proxy_pass http://frontend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # API Routes
        location /api/ {
            # Rate limiting for API calls
            limit_req zone=api burst=20 nodelay;

            proxy_pass http://backend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;

            # Timeouts
            proxy_connect_timeout 5s;
            proxy_send_timeout 60s;
            proxy_read_timeout 60s;

            # Buffer settings
            proxy_buffering on;
            proxy_buffer_size 4k;
            proxy_buffers 8 4k;
        }

        # Authentication endpoints with stricter rate limiting
        location ~ ^/api/v1/auth/(login|register|password-reset) {
            limit_req zone=login burst=3 nodelay;

            proxy_pass http://backend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;

            # Longer timeouts for authentication
            proxy_read_timeout 30s;
            proxy_send_timeout 30s;
        }

        # Payment endpoints with strict rate limiting
        location ~ ^/api/v1/payments/ {
            limit_req zone=payment burst=5 nodelay;

            proxy_pass http://backend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;

            # Extended timeouts for payment processing
            proxy_read_timeout 120s;
            proxy_send_timeout 120s;
        }

        # Webhook endpoints (no rate limiting, Stripe handles this)
        location /api/v1/webhooks/stripe {
            proxy_pass http://backend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;

            # Stripe-specific settings
            client_max_body_size 1M;
            proxy_read_timeout 30s;
        }

        # Health Check Endpoint (no logging)
        location = /health {
            access_log off;
            return 200 "healthy\n";
            add_header Content-Type text/plain;
        }

        # Actuator endpoints (restricted)
        location /actuator/ {
            # Restrict to internal networks only
            allow 10.0.0.0/8;
            allow 172.16.0.0/12;
            allow 192.168.0.0/16;
            deny all;

            proxy_pass http://backend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # Deny access to sensitive files
        location ~ /\. {
            deny all;
            access_log off;
            log_not_found off;
        }

        location ~ \.(htaccess|htpasswd|ini|log|sh|inc|bak)$ {
            deny all;
            access_log off;
            log_not_found off;
        }

        # Error pages
        error_page 404 /404.html;
        error_page 500 502 503 504 /50x.html;

        location = /404.html {
            internal;
        }

        location = /50x.html {
            internal;
        }
    }

    # API Server (separate subdomain)
    server {
        listen 443 ssl http2;
        server_name api.payment-platform.com;

        # SSL Certificate
        ssl_certificate /etc/nginx/ssl/api.payment-platform.com.crt;
        ssl_certificate_key /etc/nginx/ssl/api.payment-platform.com.key;

        # All requests go to backend
        location / {
            limit_req zone=api burst=50 nodelay;

            proxy_pass http://backend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;

            # API-specific timeouts
            proxy_connect_timeout 5s;
            proxy_send_timeout 60s;
            proxy_read_timeout 60s;
        }

        # Health check
        location = /health {
            access_log off;
            proxy_pass http://backend/actuator/health;
        }
    }

    # HTTP to HTTPS Redirect
    server {
        listen 80;
        server_name payment-platform.com www.payment-platform.com api.payment-platform.com;

        # Security headers even for redirects
        add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;

        return 301 https://$server_name$request_uri;
    }

    # Monitoring endpoints (internal only)
    server {
        listen 8080;
        server_name localhost;

        # Restrict to internal networks
        allow 10.0.0.0/8;
        allow 172.16.0.0/12;
        allow 192.168.0.0/16;
        allow 127.0.0.1;
        deny all;

        # Nginx metrics for Prometheus
        location /nginx_status {
            stub_status on;
            access_log off;
        }

        # Basic health check
        location /health {
            access_log off;
            return 200 "nginx healthy\n";
            add_header Content-Type text/plain;
        }
    }
}