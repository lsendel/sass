openapi: 3.0.3
info:
  title: Password Authentication API
  description: REST API for password-based authentication alongside OAuth2
  version: 1.0.0
servers:
  - url: http://localhost:8080/api/v1
    description: Development server
  - url: https://api.platform.com/v1
    description: Production server

paths:
  /auth/login:
    post:
      tags:
        - Authentication
      summary: Login with username and password
      description: Authenticate user with email/username and password when password auth is enabled
      operationId: loginWithPassword
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginRequest'
      responses:
        '200':
          description: Successful authentication
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoginResponse'
        '400':
          description: Invalid request data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Invalid credentials
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Account locked or email not verified
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '503':
          description: Password authentication disabled
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /auth/register:
    post:
      tags:
        - Authentication
      summary: Register new user with password
      description: Create new account with email and password when password auth is enabled
      operationId: registerWithPassword
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegisterRequest'
      responses:
        '201':
          description: Account created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RegisterResponse'
        '400':
          description: Invalid request or password policy violation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '409':
          description: Email already registered
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '503':
          description: Password authentication disabled
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /auth/verify-email:
    post:
      tags:
        - Authentication
      summary: Verify email address
      description: Confirm email ownership using verification token
      operationId: verifyEmail
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VerifyEmailRequest'
      responses:
        '200':
          description: Email verified successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageResponse'
        '400':
          description: Invalid or expired token
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Token not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /auth/request-password-reset:
    post:
      tags:
        - Authentication
      summary: Request password reset
      description: Send password reset email to registered user
      operationId: requestPasswordReset
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PasswordResetRequest'
      responses:
        '200':
          description: Reset email sent if account exists
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageResponse'
        '400':
          description: Invalid email format
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '503':
          description: Password authentication disabled
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /auth/reset-password:
    post:
      tags:
        - Authentication
      summary: Reset password with token
      description: Set new password using reset token
      operationId: resetPassword
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ResetPasswordRequest'
      responses:
        '200':
          description: Password reset successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageResponse'
        '400':
          description: Invalid token or password policy violation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Token not found or expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '503':
          description: Password authentication disabled
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /auth/change-password:
    post:
      tags:
        - Authentication
      summary: Change password for authenticated user
      description: Update password for currently logged in user
      operationId: changePassword
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChangePasswordRequest'
      responses:
        '200':
          description: Password changed successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageResponse'
        '400':
          description: Invalid current password or policy violation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Not authenticated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '503':
          description: Password authentication disabled
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /auth/resend-verification:
    post:
      tags:
        - Authentication
      summary: Resend email verification
      description: Request new verification email
      operationId: resendVerification
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ResendVerificationRequest'
      responses:
        '200':
          description: Verification email sent
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageResponse'
        '400':
          description: Invalid email or already verified
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '429':
          description: Too many requests, rate limited
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /auth/methods:
    get:
      tags:
        - Authentication
      summary: Get available authentication methods
      description: Returns list of enabled authentication methods
      operationId: getAuthMethods
      responses:
        '200':
          description: List of available methods
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthMethodsResponse'

components:
  schemas:
    LoginRequest:
      type: object
      required:
        - username
        - password
      properties:
        username:
          type: string
          format: email
          description: Email address or username
          example: user@example.com
        password:
          type: string
          format: password
          description: User password
          minLength: 1
          maxLength: 255
        rememberMe:
          type: boolean
          description: Extend session duration
          default: false

    LoginResponse:
      type: object
      required:
        - token
        - user
        - expiresAt
      properties:
        token:
          type: string
          description: Opaque session token
          example: "sesh_abc123xyz..."
        user:
          $ref: '#/components/schemas/UserInfo'
        expiresAt:
          type: string
          format: date-time
          description: Token expiration time

    RegisterRequest:
      type: object
      required:
        - email
        - password
        - confirmPassword
      properties:
        email:
          type: string
          format: email
          description: User email address
          maxLength: 255
        password:
          type: string
          format: password
          description: User password
          minLength: 12
          maxLength: 255
        confirmPassword:
          type: string
          format: password
          description: Password confirmation
        firstName:
          type: string
          description: User first name
          maxLength: 100
        lastName:
          type: string
          description: User last name
          maxLength: 100
        organizationName:
          type: string
          description: Organization name for new org
          maxLength: 255

    RegisterResponse:
      type: object
      required:
        - userId
        - email
        - message
      properties:
        userId:
          type: string
          format: uuid
          description: Created user ID
        email:
          type: string
          format: email
          description: Registered email
        message:
          type: string
          description: Success message with verification instructions

    VerifyEmailRequest:
      type: object
      required:
        - token
      properties:
        token:
          type: string
          description: Email verification token from email link

    PasswordResetRequest:
      type: object
      required:
        - email
      properties:
        email:
          type: string
          format: email
          description: Email address of account

    ResetPasswordRequest:
      type: object
      required:
        - token
        - password
        - confirmPassword
      properties:
        token:
          type: string
          description: Password reset token from email
        password:
          type: string
          format: password
          description: New password
          minLength: 12
          maxLength: 255
        confirmPassword:
          type: string
          format: password
          description: Password confirmation

    ChangePasswordRequest:
      type: object
      required:
        - currentPassword
        - newPassword
        - confirmPassword
      properties:
        currentPassword:
          type: string
          format: password
          description: Current password for verification
        newPassword:
          type: string
          format: password
          description: New password
          minLength: 12
          maxLength: 255
        confirmPassword:
          type: string
          format: password
          description: New password confirmation

    ResendVerificationRequest:
      type: object
      required:
        - email
      properties:
        email:
          type: string
          format: email
          description: Email address to resend verification

    AuthMethodsResponse:
      type: object
      required:
        - methods
        - passwordAuthEnabled
      properties:
        methods:
          type: array
          items:
            type: string
            enum: [OAUTH2, PASSWORD]
          description: Available authentication methods
        passwordAuthEnabled:
          type: boolean
          description: Whether password auth is enabled
        oauth2Providers:
          type: array
          items:
            type: string
          description: Available OAuth2 providers
          example: [google, github, microsoft]

    UserInfo:
      type: object
      required:
        - id
        - email
        - emailVerified
      properties:
        id:
          type: string
          format: uuid
        email:
          type: string
          format: email
        emailVerified:
          type: boolean
        firstName:
          type: string
        lastName:
          type: string
        organizationId:
          type: string
          format: uuid
        organizationName:
          type: string
        authenticationMethods:
          type: array
          items:
            type: string
            enum: [OAUTH2, PASSWORD]

    MessageResponse:
      type: object
      required:
        - message
      properties:
        message:
          type: string
          description: Success message

    ErrorResponse:
      type: object
      required:
        - error
        - message
        - timestamp
      properties:
        error:
          type: string
          description: Error code
          example: "INVALID_CREDENTIALS"
        message:
          type: string
          description: Human-readable error message
        timestamp:
          type: string
          format: date-time
        details:
          type: object
          additionalProperties: true
          description: Additional error details

  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      description: Opaque bearer token