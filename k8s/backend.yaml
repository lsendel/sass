apiVersion: apps/v1
kind: Deployment
metadata:
  name: backend
  namespace: payment-platform
  labels:
    app: backend
spec:
  replicas: 2
  selector:
    matchLabels:
      app: backend
  template:
    metadata:
      labels:
        app: backend
    spec:
      automountServiceAccountToken: false
      securityContext:
        runAsUser: 1001
        runAsGroup: 1001
        fsGroup: 1001
        runAsNonRoot: true
      containers:
      - name: backend
        image: payment-platform/backend:1.0.0
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 8080
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          capabilities:
            drop: ["ALL"]
        env:
        - name: SPRING_PROFILES_ACTIVE
          valueFrom:
            configMapKeyRef:
              name: payment-platform-config
              key: SPRING_PROFILES_ACTIVE
        - name: SPRING_DATASOURCE_URL
          value: "jdbc:postgresql://postgres-service:5432/$(POSTGRES_DB)"
        - name: SPRING_DATASOURCE_USERNAME
          valueFrom:
            configMapKeyRef:
              name: payment-platform-config
              key: POSTGRES_USER
        - name: SPRING_DATASOURCE_PASSWORD
          valueFrom:
            secretKeyRef:
              name: payment-platform-secrets
              key: POSTGRES_PASSWORD
        - name: SPRING_REDIS_HOST
          valueFrom:
            configMapKeyRef:
              name: payment-platform-config
              key: REDIS_HOST
        - name: SPRING_REDIS_PORT
          valueFrom:
            configMapKeyRef:
              name: payment-platform-config
              key: REDIS_PORT
        - name: SPRING_REDIS_PASSWORD
          valueFrom:
            secretKeyRef:
              name: payment-platform-secrets
              key: REDIS_PASSWORD
        - name: SERVER_PORT
          valueFrom:
            configMapKeyRef:
              name: payment-platform-config
              key: SERVER_PORT
        - name: STRIPE_SECRET_KEY
          valueFrom:
            secretKeyRef:
              name: payment-platform-secrets
              key: STRIPE_SECRET_KEY
        - name: STRIPE_WEBHOOK_SECRET
          valueFrom:
            secretKeyRef:
              name: payment-platform-secrets
              key: STRIPE_WEBHOOK_SECRET
        - name: OAUTH_GOOGLE_CLIENT_SECRET
          valueFrom:
            secretKeyRef:
              name: payment-platform-secrets
              key: OAUTH_GOOGLE_CLIENT_SECRET
        - name: OAUTH_GITHUB_CLIENT_SECRET
          valueFrom:
            secretKeyRef:
              name: payment-platform-secrets
              key: OAUTH_GITHUB_CLIENT_SECRET
        - name: OAUTH_MICROSOFT_CLIENT_SECRET
          valueFrom:
            secretKeyRef:
              name: payment-platform-secrets
              key: OAUTH_MICROSOFT_CLIENT_SECRET
        - name: JAVA_OPTS
          valueFrom:
            configMapKeyRef:
              name: payment-platform-config
              key: JAVA_OPTS
        resources:
          requests:
            memory: "1Gi"
            cpu: "500m"
          limits:
            memory: "1.5Gi"
            cpu: "1000m"
        livenessProbe:
          httpGet:
            path: /actuator/health/liveness
            port: 8080
          initialDelaySeconds: 60
          periodSeconds: 30
          timeoutSeconds: 10
        readinessProbe:
          httpGet:
            path: /actuator/health/readiness
            port: 8080
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
        volumeMounts:
        - name: tmp
          mountPath: /tmp
        startupProbe:
          httpGet:
            path: /actuator/health
            port: 8080
          initialDelaySeconds: 30
          periodSeconds: 10
          failureThreshold: 30
      volumes:
      - name: tmp
        emptyDir: {}

---
apiVersion: v1
kind: Service
metadata:
  name: backend-service
  namespace: payment-platform
  labels:
    app: backend
  annotations:
    prometheus.io/scrape: "true"
    prometheus.io/path: "/actuator/prometheus"
    prometheus.io/port: "8080"
spec:
  type: ClusterIP
  ports:
  - name: http
    port: 8080
    targetPort: 8080
  selector:
    app: backend

---
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: backend-pdb
  namespace: payment-platform
spec:
  minAvailable: 1
  selector:
    matchLabels:
      app: backend

---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: backend-network-policy
  namespace: payment-platform
spec:
  podSelector:
    matchLabels:
      app: backend
  policyTypes:
    - Ingress
    - Egress
  ingress:
    - from:
        - podSelector:
            matchLabels:
              app: frontend
      ports:
        - protocol: TCP
          port: 8080
  egress:
    # Allow DNS to kube-dns
    - to:
        - namespaceSelector:
            matchLabels:
              kubernetes.io/metadata.name: kube-system
          podSelector:
            matchLabels:
              k8s-app: kube-dns
      ports:
        - protocol: UDP
          port: 53
        - protocol: TCP
          port: 53
    # Allow Postgres in-namespace
    - to:
        - podSelector:
            matchLabels:
              app: postgres
      ports:
        - protocol: TCP
          port: 5432
    # Allow Redis in-namespace (if present)
    - to:
        - podSelector:
            matchLabels:
              app: redis
      ports:
        - protocol: TCP
          port: 6379
    # Allow outbound HTTPS for third-party APIs (e.g., Stripe)
    - to:
        - ipBlock:
            cidr: 0.0.0.0/0
      ports:
        - protocol: TCP
          port: 443

apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: backend-hpa
  namespace: payment-platform
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: backend
  minReplicas: 2
  maxReplicas: 10
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 70
  - type: Resource
    resource:
      name: memory
      target:
        type: Utilization
        averageUtilization: 80
