spring:
  application:
    name: payment-platform

  profiles:
    active: development

  datasource:
    url: jdbc:postgresql://localhost:5432/platform
    username: ${DB_USERNAME:platform}
    password: ${DB_PASSWORD:platform}
    driver-class-name: org.postgresql.Driver

  jpa:
    hibernate:
      ddl-auto: validate
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
        format_sql: true
    show-sql: ${SHOW_SQL:false}

  data:
    redis:
      host: ${REDIS_HOST:localhost}
      port: ${REDIS_PORT:6379}
      timeout: 2000ms
      password: ${REDIS_PASSWORD:}

  session:
    store-type: redis
    timeout: 24h
    redis:
      flush-mode: on_save
      namespace: spring:session

  flyway:
    enabled: true
    locations: classpath:db/migration
    baseline-on-migrate: true

  security:
    oauth2:
      client:
        registration:
          google:
            client-id: ${GOOGLE_CLIENT_ID:}
            client-secret: ${GOOGLE_CLIENT_SECRET:}
            scope:
              - openid
              - profile
              - email
            redirect-uri: "{baseUrl}/api/v1/auth/oauth2/callback/google"
          github:
            client-id: ${GITHUB_CLIENT_ID:}
            client-secret: ${GITHUB_CLIENT_SECRET:}
            scope:
              - read:user
              - user:email
            redirect-uri: "{baseUrl}/api/v1/auth/oauth2/callback/github"
          microsoft:
            client-id: ${MICROSOFT_CLIENT_ID:}
            client-secret: ${MICROSOFT_CLIENT_SECRET:}
            scope:
              - openid
              - profile
              - email
            authorization-grant-type: authorization_code
            redirect-uri: "{baseUrl}/api/v1/auth/oauth2/callback/microsoft"
        provider:
          google:
            authorization-uri: https://accounts.google.com/o/oauth2/auth
            token-uri: https://oauth2.googleapis.com/token
            user-info-uri: https://www.googleapis.com/oauth2/v2/userinfo
            user-name-attribute: id
          github:
            authorization-uri: https://github.com/login/oauth/authorize
            token-uri: https://github.com/login/oauth/access_token
            user-info-uri: https://api.github.com/user
            user-name-attribute: id
          microsoft:
            authorization-uri: https://login.microsoftonline.com/common/oauth2/v2.0/authorize
            token-uri: https://login.microsoftonline.com/common/oauth2/v2.0/token
            user-info-uri: https://graph.microsoft.com/oidc/userinfo
            user-name-attribute: sub

server:
  port: 8080
  servlet:
    context-path: /api/v1

management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics
  endpoint:
    health:
      show-details: when_authorized

logging:
  level:
    com.platform: ${LOG_LEVEL:INFO}
    org.springframework.modulith: DEBUG
    org.springframework.security: ${SECURITY_LOG_LEVEL:WARN}
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss} - %msg%n"

# Application Configuration
app:
  base-url: ${APP_BASE_URL:http://localhost:8080}
  frontend-url: ${FRONTEND_URL:http://localhost:3000}

stripe:
  api-key: ${STRIPE_SECRET_KEY:}
  webhook-secret: ${STRIPE_WEBHOOK_SECRET:}

---
spring:
  config:
    activate:
      on-profile: test

  main:
    allow-circular-references: true

  datasource:
    url: jdbc:h2:mem:testdb
    driver-class-name: org.h2.Driver
    username: sa
    password: password

  jpa:
    database-platform: org.hibernate.dialect.H2Dialect
    hibernate:
      ddl-auto: create-drop
    show-sql: true
    properties:
      hibernate:
        dialect: org.hibernate.dialect.H2Dialect
        globally_quoted_identifiers: true

  data:
    redis:
      host: localhost
      port: 6379
      timeout: 2000ms

  flyway:
    enabled: false

  h2:
    console:
      enabled: true

  security:
    oauth2:
      client:
        registration:
          google:
            client-id: dummy-google-client-id
            client-secret: dummy-google-client-secret
          github:
            client-id: dummy-github-client-id
            client-secret: dummy-github-client-secret
          microsoft:
            client-id: dummy-microsoft-client-id
            client-secret: dummy-microsoft-client-secret

stripe:
  secret-key: sk_test_dummy_key_for_testing
  webhook:
    secret: whsec_dummy_webhook_secret_for_testing