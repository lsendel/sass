# Performance-optimized configuration for production environments
# Usage: --spring.profiles.active=performance

spring:
  # Database connection optimization
  datasource:
    hikari:
      # Connection pool sizing
      maximum-pool-size: 20
      minimum-idle: 5
      idle-timeout: 300000         # 5 minutes
      max-lifetime: 600000         # 10 minutes
      connection-timeout: 30000    # 30 seconds
      validation-timeout: 5000     # 5 seconds
      leak-detection-threshold: 60000  # 1 minute

      # Performance tuning
      auto-commit: false
      connection-init-sql: "SET SESSION sql_mode = 'STRICT_TRANS_TABLES,NO_ZERO_DATE,NO_ZERO_IN_DATE,ERROR_FOR_DIVISION_BY_ZERO'"

      # Connection validation
      connection-test-query: "SELECT 1"
      test-while-idle: true
      test-on-borrow: false
      test-on-return: false

  # JPA/Hibernate optimization
  jpa:
    hibernate:
      ddl-auto: validate
      naming:
        physical-strategy: org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl
    properties:
      hibernate:
        # Query optimization
        jdbc:
          batch_size: 50
          fetch_size: 50
          batch_versioned_data: true
          order_inserts: true
          order_updates: true

        # Cache configuration
        cache:
          use_second_level_cache: true
          use_query_cache: true
          region:
            factory_class: org.hibernate.cache.jcache.JCacheRegionFactory

        # Performance monitoring
        generate_statistics: true
        session:
          events:
            log:
              LOG_QUERIES_SLOWER_THAN_MS: 100

        # Connection handling
        connection:
          provider_disables_autocommit: true
          handling_mode: DELAYED_ACQUISITION_AND_RELEASE_AFTER_TRANSACTION

  # Session management optimization
  session:
    store-type: redis
    redis:
      flush-mode: on_save
      save-mode: on_set_attribute
    timeout: 30m
    cookie:
      max-age: 1800  # 30 minutes
      secure: true
      http-only: true
      same-site: strict

  # Redis optimization
  data:
    redis:
      host: ${REDIS_HOST:localhost}
      port: ${REDIS_PORT:6379}
      password: ${REDIS_PASSWORD:}
      timeout: 2000ms
      connect-timeout: 2000ms
      lettuce:
        pool:
          max-active: 20
          max-idle: 8
          min-idle: 2
          max-wait: -1ms
        shutdown-timeout: 100ms

  # Jackson serialization optimization
  jackson:
    serialization:
      write_dates_as_timestamps: false
      fail_on_empty_beans: false
    deserialization:
      fail_on_unknown_properties: false
      accept_empty_string_as_null_object: true

# Server optimization
server:
  tomcat:
    threads:
      max: 200
      min-spare: 10
    connection-timeout: 30000
    keep-alive-timeout: 30000
    max-keep-alive-requests: 100
    accept-count: 100
    max-connections: 8192
  compression:
    enabled: true
    mime-types: text/html,text/xml,text/plain,text/css,text/javascript,application/javascript,application/json,application/xml
    min-response-size: 1024

# Logging optimization
logging:
  level:
    org.hibernate.SQL: INFO
    org.hibernate.type.descriptor.sql.BasicBinder: INFO
    org.springframework.cache: INFO
    com.platform: INFO
    org.springframework.security: WARN
  pattern:
    console: "%d{HH:mm:ss.SSS} [%thread] %-5level %logger{36} - %msg%n"
    file: "%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger{36} - %msg%n"

# Management and monitoring
management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics,prometheus,caches
  endpoint:
    health:
      show-details: when_authorized
      show-components: always
    metrics:
      enabled: true
  metrics:
    export:
      prometheus:
        enabled: true
    distribution:
      percentiles-histogram:
        http.server.requests: true
    tags:
      application: payment-platform

# Cache configuration
cache:
  redis:
    time-to-live: 30m
    cache-null-values: false
  caffeine:
    spec: maximumSize=1000,expireAfterWrite=5m

# Performance monitoring
performance:
  monitoring:
    enabled: true
    slow-query-threshold: 100ms
    memory-threshold: 80
    cpu-threshold: 85

# Custom application properties
app:
  async:
    core-pool-size: 4
    max-pool-size: 16
    queue-capacity: 100
    thread-name-prefix: "Async-"

  security:
    rate-limit:
      enabled: true
      requests-per-minute: 1000
      burst-capacity: 100

  cache:
    organization:
      ttl: 3600s
      max-size: 1000
    user:
      ttl: 1800s
      max-size: 5000
    audit:
      ttl: 300s
      max-size: 10000