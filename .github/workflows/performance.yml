name: Performance Monitoring

on:
  schedule:
    - cron: '0 */6 * * *'  # Run every 6 hours
  workflow_dispatch:

permissions:
  contents: read
  actions: read

jobs:
  performance-checks:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '20'

    - name: Install Lighthouse
      run: npm install -g lighthouse

    - name: Run Lighthouse CI
      run: |
        # Skip Lighthouse if production URL is not configured
        PROD_URL="${{ vars.PRODUCTION_URL || 'https://your-production-url.com' }}"
        if [[ "$PROD_URL" == "https://your-production-url.com" ]]; then
          echo "⚠️ Production URL not configured. Skipping Lighthouse scan."
          echo "To enable, set PRODUCTION_URL variable in repository settings."
          exit 0
        fi

        lighthouse "$PROD_URL" \
          --output html --output json \
          --output-path ./lighthouse-report.html \
          --chrome-flags="--headless --no-sandbox --disable-gpu --disable-dev-shm-usage" \
          || echo "Lighthouse failed, continuing anyway"

    - name: Check if k6 tests exist
      id: check_k6
      run: |
        if [ -f "performance/load-tests.js" ]; then
          echo "exists=true" >> $GITHUB_OUTPUT
        else
          echo "exists=false" >> $GITHUB_OUTPUT
          echo "⚠️ k6 load tests not found. Skipping."
        fi

    - name: Run k6 Load Tests
      if: steps.check_k6.outputs.exists == 'true'
      continue-on-error: true
      uses: grafana/k6-action@v0.3.0
      with:
        filename: performance/load-tests.js

    - name: Run Backend Performance Tests
      continue-on-error: true
      run: |
        cd backend
        if ./gradlew tasks --all | grep -q "performanceTest"; then
          ./gradlew performanceTest
        else
          echo "⚠️ Backend performance tests not configured. Skipping."
        fi

    - name: Run Frontend Performance Tests
      continue-on-error: true
      run: |
        cd frontend
        if npm run | grep -q "test:performance"; then
          npm run test:performance
        else
          echo "⚠️ Frontend performance tests not configured. Skipping."
        fi

    - name: Analyze Bundle Size
      continue-on-error: true
      run: |
        cd frontend
        if npm run | grep -q "analyze-bundle"; then
          npm run analyze-bundle
        else
          echo "⚠️ Bundle analysis not configured. Skipping."
        fi

    - name: Check API Response Times
      continue-on-error: true
      run: |
        if [ -f "tests/performance/check-api-performance.sh" ]; then
          cd tests/performance
          ./check-api-performance.sh
        else
          echo "⚠️ API performance check script not found. Skipping."
        fi

    - name: Upload Performance Reports
      uses: actions/upload-artifact@v4
      with:
        name: performance-reports
        path: |
          lighthouse-report.html
          backend/build/reports/performance/
          frontend/performance-report/
          tests/performance/results/

    - name: Notify on Performance Regression
      if: failure()
      continue-on-error: true
      uses: slackapi/slack-github-action@v1.24.0
      with:
        channel-id: 'performance-alerts'
        slack-message: "⚠️ Performance regression detected! Check the latest performance report."
      env:
        SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}