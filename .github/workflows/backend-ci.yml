name: Backend CI

on:
  push:
    branches: [ main, master, develop ]
    paths:
      - 'backend/**'
    - name: Process Test Results
      if: always()
      run: |
        cd backend
        if [ -f build/test-results/test/TEST-*.xml ]; then
          echo "Processing test results..."
          mkdir -p build/test-summary
          ./gradlew testReport
        else
          echo "No test results found"
        fi

    - name: Upload Test Results
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: test-results
        path: |
          backend/build/reports/tests/
          backend/build/test-results/
          backend/build/test-summary/
        retention-days: 14- '.github/workflows/backend-ci.yml'
  pull_request:
    paths:
      - 'backend/**'
      - '.github/workflows/backend-ci.yml'

permissions:
  contents: read
  actions: read
  security-events: write
  pull-requests: write

jobs:
  backend-tests:
    runs-on: ubuntu-latest
    timeout-minutes: 45
    
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_DB: testdb
          POSTGRES_USER: test
          POSTGRES_PASSWORD: test
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
      
      redis:
        image: redis:7
        ports:
          - 6379:6379
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
    - uses: actions/checkout@v4
    
    - name: Set up JDK 21
      uses: actions/setup-java@v4
      with:
        java-version: '21'
        distribution: 'temurin'

    - name: Setup Gradle Cache
      uses: actions/cache@v4
      with:
        path: |
          ~/.gradle/caches
          ~/.gradle/wrapper
          ~/.m2/repository
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
        restore-keys: |
          ${{ runner.os }}-gradle-

    - name: Grant execute permission for gradlew
      run: chmod +x backend/gradlew

    - name: Run Backend Tests
      env:
        SPRING_PROFILES_ACTIVE: test
        SPRING_DATASOURCE_URL: jdbc:postgresql://localhost:5432/testdb
        SPRING_DATASOURCE_USERNAME: test
        SPRING_DATASOURCE_PASSWORD: test
        SPRING_REDIS_HOST: localhost
        SPRING_REDIS_PORT: 6379
      run: |
        cd backend
        for i in {1..3}; do
          ./gradlew test jacocoTestReport --info && break
          if [ $i -eq 3 ]; then
            echo "Tests failed after 3 retries"
            exit 1
          fi
          echo "Retry $i..."
          sleep 10
        done

    - name: Run Spring Boot Modulith Tests
      run: |
        cd backend
        ./gradlew modulithCheck

    - name: Run Architecture Tests
      run: |
        cd backend
        ./gradlew archTest

    - name: Upload Test Results
      if: always()
      uses: actions/upload-artifact@v3
      with:
        name: test-results
        path: backend/build/reports/tests/

    - name: Upload Coverage Report
      uses: actions/upload-artifact@v4
      with:
        name: coverage-report
        path: backend/build/reports/jacoco/
        retention-days: 14

    - name: SonarCloud Analysis
      env:
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      run: |
        cd backend
        ./gradlew sonarqube \
          -Dsonar.projectKey=payment-platform_sass \
          -Dsonar.organization=payment-platform \
          -Dsonar.host.url=https://sonarcloud.io

    - name: Check Dependencies
      run: |
        cd backend
        ./gradlew dependencyCheckAnalyze

    - name: Report Test Failures
      if: failure()
      run: |
        cd backend
        if [ -f build/test-results/test/TEST-*.xml ]; then
          echo "Test Failures Summary:"
          find build/test-results/test -name "TEST-*.xml" -exec grep -l "<failure" {} \; | while read file; do
            echo "\nFailures in $file:"
            grep -A 2 "<failure" "$file"
          done
        fi